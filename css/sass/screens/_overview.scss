@use "../helpers/variables" as *;
@use "../helpers/functions" as *;

.overview-screen {
	.current-and-next-game {
		gap: 10px;
		> div {
			gap: 10px;
			> div {
				border-radius: var(--main-border-radius-size, $main-border-radius-size);
				padding: var(--main-padding-size, $main-padding-size);
				background-color: var(--main-color, $main-color);
				width: 100%;
				color: white;
			}
		}
	}

	table {
		border-spacing: 5px;
		border-collapse: separate;
		min-width: 500px;
		td,
		th {
			transition: var(--main-animation-duration, $main-animation-duration);
			background-color: var(--color-3, get-item-by-index($main-colors, 3));
			padding: var(--main-padding-size, $main-padding-size);
			border-radius: var(--main-border-radius-size, $main-border-radius-size);
			text-align: center;
			border: 1px solid transparent;
		}
		th {
			background-color: var(--color-1, get-item-by-index($main-colors, 1));
		}
		tr:hover td {
			background-color: var(--color-4, get-item-by-index($main-colors, 4));
		}
		td:hover {
			border: 1px solid var(--main-color, $main-color);
			// color: var(--main-color, $main-color);
		}
		@for $i from 1 through 4 {
			&:has(tbody > tr > *:nth-child(#{$i}):hover)
				tbody
				> tr
				> *:nth-child(#{$i}) {
				background-color: var(--color-4, get-item-by-index($main-colors, 4));
			}
		}
	}
	.stats > div {
		gap: 10px;
		> div {
			background-color: var(--main-color, $main-color);
			border-radius: var(--main-border-radius-size, $main-border-radius-size);
			color: white;
			width: 100%;
			padding: var(--main-padding-size, $main-padding-size) 0;
			> p:last-child {
				line-height: 1;
			}
		}
	}
}
