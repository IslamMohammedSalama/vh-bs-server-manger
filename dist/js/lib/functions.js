import*as vars from"./vars.js";const delay=e=>new Promise((t=>setTimeout(t,e)));function sendMessage(e){let t=document.querySelector(".chat-screen .messages"),o=document.createElement("p");o.textContent=`ServerName : ${e}`,t.appendChild(o),o.scrollIntoView({behavior:"smooth"})}function theme(e="dark"){"dark"===e?document.body.classList.add("dark-mode"):"light"===e?document.body.classList.remove("dark-mode"):console.error(`No Theme Called ${e}`)}function updateURL(e){const t=e.replace("-screen",""),o={screen:t};history.pushState(o,"",`${window.location.pathname}#${t}`)}async function navigateToScreen(e){const t=document.querySelector("."+e);t&&(t.style.display="block",await delay(10),t.style.left=0,document.body.classList.add("disable-scrolling"),updateURL(e))}function initializeFromURL(){if(""!==window.location.hash)try{let e=`${window.location.hash.match(/[^#]/gim).join("")}-screen`;history.pushState({screen:""},"",`${window.location.pathname}`),navigateToScreen(e)}catch(e){console.log("Error "+e)}}function loadSettings(){const e=JSON.parse(localStorage.getItem("config"))||{};vars.elesToSaveData.forEach((t=>{const o=document.querySelector(t.id);if(!o)return;const n=t.settingIds.reduce(((e,t)=>e?.[t]),e);switch(t.type){case"input":case"color-selector":case"time":o.value=n||"";break;case"switch":o.checked=Boolean(n);break;case"number-chooser":o.textContent=n||""}}))}function storeElesValues(){const e=vars.elesToSaveData,t=JSON.parse(localStorage.getItem("config"))||{};e.forEach((e=>{const o=document.querySelector(e.id);if(!o)return;const n="input"===e.type?"input":"click";"color-selector"===e.type||"time"===e.type?o.oninput=o=>{let n=o.target.value,s=t;for(let t=0;t<e.settingIds.length-1;t++){const o=e.settingIds[t];s[o]=s[o]||{},s=s[o]}s[e.settingIds[e.settingIds.length-1]]=n,localStorage.setItem("config",JSON.stringify(t))}:o.addEventListener(n,(o=>{let n;"input"===e.type&&(n=o.target.value),"switch"===e.type&&(n=o.target.checked),"number-chooser"===e.type&&(n=parseInt(o.target.textContent)),"color-selector"===e.type&&(n=o.target.value);let s=t;for(let t=0;t<e.settingIds.length-1;t++){const o=e.settingIds[t];s[o]=s[o]||{},s=s[o],console.log(o),console.log(s)}s[e.settingIds[e.settingIds.length-1]]=n,localStorage.setItem("config",JSON.stringify(t))}))}))}export{loadSettings,initializeFromURL,delay,navigateToScreen,updateURL,theme,sendMessage,storeElesValues};
//# sourceMappingURL=maps/functions.js.map
