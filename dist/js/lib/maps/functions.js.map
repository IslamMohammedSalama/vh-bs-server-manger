{"version":3,"file":"../functions.js","names":["vars","delay","ms","Promise","res","setTimeout","sendMessage","msg","msgsBox","document","querySelector","newMsg","createElement","textContent","appendChild","scrollIntoView","behavior","theme","themeName","body","classList","add","remove","console","error","updateURL","screenClass","screenName","replace","stateObj","screen","history","pushState","window","location","pathname","async","navigateToScreen","tScreen","style","display","left","initializeFromURL","hash","screenClassNameToNav","match","join","loadSettings","config","JSON","parse","localStorage","getItem","elements","elesToSaveData","radioElesToSaveData","forEach","ele","value","settingIds","reduce","obj","key","elesSelector","checked","element","id","type","Boolean","storeElesValues","radioEles","radioEls","querySelectorAll","group","radioEle","onclick","ev","radEle","dataset","bombname","evalCommand","thing","eval","setItem","stringify","el","eventType","oninput","target","addEventListener","parseInt","loadRoles","rolesObj","innerHTML","index","length","createNewRoleBlock","role","indexOfPlayer","numberOfPlayer","children","undefined","htmlCode","rolesPr","newPlayer","popupWin","nextElementSibling","overlay","opacity","transform","combobox","label","append","parentElement","previousElementSibling","log","inputId","onchange","showLoginScreen","rej","then","origin","loginScreen","className","before","showAndHidePassword","preventDefault","password"],"sources":["functions.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import * as vars from \"./vars.js\";\n\n// Wait function\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n\n// Send Msg Function\nfunction sendMessage(msg) {\n  let msgsBox = document.querySelector(\".chat-screen .messages\");\n  let newMsg = document.createElement(\"p\");\n  newMsg.textContent = `ServerName : ${msg}`;\n  msgsBox.appendChild(newMsg);\n  newMsg.scrollIntoView({ behavior: \"smooth\" });\n}\n\n// Change Theme Function\nfunction theme(themeName = \"dark\") {\n  if (themeName === \"dark\") {\n    document.body.classList.add(\"dark-mode\");\n  } else if (themeName === \"light\") {\n    document.body.classList.remove(\"dark-mode\");\n  } else {\n    console.error(`No Theme Called ${themeName}`);\n  }\n}\n\n// Update URL without page reload\nfunction updateURL(screenClass) {\n  // Get the screen name from class (remove '-screen' suffix)\n  const screenName = screenClass.replace(\"-screen\", \"\");\n\n  // Create a state object\n  const stateObj = { screen: screenName };\n\n  // Change the URL without reloading the page\n  history.pushState(stateObj, \"\", `${window.location.pathname}#${screenName}`);\n}\n\n// Function to handle navigation to a specific screen\nasync function navigateToScreen(screenClass) {\n  const tScreen = document.querySelector(\".\" + screenClass);\n\n  // Exit if the screen doesn't exist\n  if (!tScreen) return;\n\n  // Show the screen\n  tScreen.style.display = \"block\";\n  await delay(0);\n  tScreen.style.left = 0;\n  document.body.classList.add(\"disable-scrolling\");\n  // Update URL\n  updateURL(screenClass);\n}\n\n// Initialize navigation on page load\nfunction initializeFromURL() {\n  if (window.location.hash !== \"\") {\n    try {\n      let screenClassNameToNav = `${window.location.hash\n        .match(/[^#]/gim)\n        .join(\"\")}-screen`;\n      history.pushState({ screen: \"\" }, \"\", `${window.location.pathname}`);\n\n      navigateToScreen(screenClassNameToNav);\n    } catch (error) {\n      console.error(\"Error \" + error);\n    }\n  }\n}\n\n// Load Settings Function\nfunction loadSettings() {\n  let config = JSON.parse(localStorage.getItem(\"config\")) || {};\n  const elements = vars.elesToSaveData;\n  const radioEles = vars.radioElesToSaveData;\n  radioEles.forEach((ele) => {\n    // document\n    //   .querySelectorAll(`[data-group=\"${ele.group}\"]`)\n    //   .forEach((radEle) => (radEle.checked = false));\n    const value = ele.settingIds.reduce((obj, key) => obj?.[key], config);\n    let el = document.querySelector(`[${ele.elesSelector}=${value}]`);\n    el.checked = true;\n  });\n\n  elements.forEach((ele) => {\n    const element = document.querySelector(ele.id);\n    if (!element) return;\n    const value = ele.settingIds.reduce((obj, key) => obj[key], config);\n    switch (ele.type) {\n      case \"input\":\n        element.value = value;\n        break;\n      case \"switch\":\n        element.checked = Boolean(value);\n        break;\n      case \"number-chooser\":\n        element.textContent = value;\n        break;\n      case \"time-chooser\":\n        element.value = value;\n        break;\n      case \"color-chooser\":\n        element.value = value;\n        break;\n    }\n  });\n}\n\n// Store Elements Values\nfunction storeElesValues() {\n  const elements = vars.elesToSaveData;\n  let config = JSON.parse(localStorage.getItem(\"config\")) || {};\n  const radioEles = vars.radioElesToSaveData;\n  radioEles.forEach((ele) => {\n    let radioEls = document.querySelectorAll(`[data-group=\"${ele.group}\"]`);\n\n    radioEls.forEach(\n      (radioEle) =>\n        (radioEle.onclick = (ev) => {\n          radioEls.forEach((radEle) => (radEle.checked = false));\n          radioEle.checked = true;\n          let value = radioEle.dataset.bombname;\n\n          let evalCommand = \"config\";\n          for (const thing of ele.settingIds)\n            evalCommand = evalCommand + `[\"${thing}\"]`;\n          evalCommand = evalCommand + ` = value`;\n          eval(evalCommand);\n\n          localStorage.setItem(\"config\", JSON.stringify(config));\n        })\n    );\n  });\n\n  elements.forEach((ele) => {\n    const el = document.querySelector(ele.id);\n    if (!el) return;\n\n    const eventType =\n      ele.type === \"input\"\n        ? \"input\"\n        : \"checkbox\"\n        ? \"click\"\n        : \"color-chooser\"\n        ? \"input\"\n        : \"time-chooser\"\n        ? \"input\"\n        : \"\";\n    if (ele.type === \"color-chooser\" || ele.type === \"time-chooser\") {\n      el.oninput = (ev) => {\n        let value = ev.target.value;\n\n        let evalCommand = \"config\";\n        for (const thing of ele.settingIds)\n          evalCommand = evalCommand + `[\"${thing}\"]`;\n        evalCommand = evalCommand + ` = value`;\n        eval(evalCommand);\n\n        localStorage.setItem(\"config\", JSON.stringify(config));\n      };\n    } else {\n      el.addEventListener(eventType, (ev) => {\n        let value;\n        if (ele.type === \"input\") value = ev.target.value;\n        if (ele.type === \"switch\") value = ev.target.checked;\n        if (ele.type === \"number-chooser\")\n          value = parseInt(ev.target.textContent);\n        if (ele.type === \"color-chooser\") value = ev.target.value;\n\n        // Update config using nested property assignment\n        // let current = config;\n        // for (let i = 0; i < ele.settingIds.length - 1; i++) {\n        //   const key = ele.settingIds[i];\n        //   current = current[key];\n        // }\n        // current[ele.settingIds[ele.settingIds.length - 1]] = value;\n\n        let evalCommand = \"config\";\n        for (const thing of ele.settingIds)\n          evalCommand = evalCommand + `[\"${thing}\"]`;\n\n        evalCommand = evalCommand + ` = value`;\n        eval(evalCommand);\n\n        localStorage.setItem(\"config\", JSON.stringify(config));\n      });\n    }\n  });\n}\n\nfunction loadRoles() {\n  let config = JSON.parse(localStorage.getItem(\"config\"));\n  let rolesObj = config[\"players-roles\"];\n  document.querySelector(\"#roles-management .body .container\").innerHTML = \"\";\n  for (let index = 0; index < rolesObj.length; index++) {\n    const obj = rolesObj[index];\n    createNewRoleBlock(obj.id, obj.role, index);\n  }\n}\n\nfunction createNewRoleBlock(id, role, indexOfPlayer) {\n  const numberOfPlayer =\n    indexOfPlayer + 1 ||\n    document.querySelector(\"#roles-management .body .container\").children\n      .length + 1;\n  // init  data if not existed\n\n  if (indexOfPlayer === undefined) {\n    indexOfPlayer = numberOfPlayer - 1;\n    let config = JSON.parse(localStorage.getItem(\"config\"));\n    config[\"players-roles\"][indexOfPlayer] = {\n      id: id,\n      role: role,\n    };\n    localStorage.setItem(\"config\", JSON.stringify(config));\n  }\n  let htmlCode = `\n  <li>\n    <span>Player Number ${numberOfPlayer} :</span>\n  </li>\n  <li>\n    <form action>\n      <label class=\"form\">\n      <span>Player pb </span>\n      <textarea\n        class=\"player-${indexOfPlayer}-pb\"\n        id=\"player-${indexOfPlayer}-pb-roles\"\n        placeholder=\"Enter Player pb\"\n        name=\"player-${indexOfPlayer}-pb\"\n      >${id || \"\"}</textarea>\n    </label>\n    </form>\n  </li>\n  <li class=\"popup\">\n    <span>Role: </span>\n    <button class=\"select-combobox\">\n      <span>Owner</span>\n    </button>\n    <div class=\"popup-window\">\n      <div class=\"popup-header\">\n        <h5>Role Chooser</h5>\n        <button class=\"close circle\">\n          <i class=\"fa fa-close\"></i>\n        </button>\n      </div>\n      <div class=\"body mt-2\">\n        <form>\n          <ul>\n            <li>\n              <label class=\"radio-box\">\n                <span>Owner</span>\n                <span>\n                  <input\n                    class=\"toggle-radio role owner-role-${indexOfPlayer}\"\n                    id=\"owner-role-${indexOfPlayer}\"\n                    type=\"radio\"\n                    name=\"player-role-${indexOfPlayer}\"\n                    data-group=\"role-${indexOfPlayer}\"\n                    data-role=\"owner\"\n                    checked=\"checked\"\n                  />\n                  <div class=\"toggle-radio-box\"></div>\n                </span>\n              </label>\n            </li>\n            <li>\n              <label class=\"radio-box\">\n                <span>Co-Owner</span>\n                <span>\n                  <input\n                    class=\"toggle-radio role co-owner-role-${indexOfPlayer}\"\n                    id=\"co-owner-role-${indexOfPlayer}\"\n                    type=\"radio\"\n                    name=\"player-role-${indexOfPlayer}\"\n                    data-group=\"role-${indexOfPlayer}\"\n                    data-role=\"co-owner\"\n                  />\n                  <div class=\"toggle-radio-box\"></div>\n                </span>\n              </label>\n            </li>\n            <li>\n              <label class=\"radio-box\">\n                <span>Lead Staff</span>\n                <span>\n                  <input\n                    class=\"toggle-radio role lead-staff-role-${indexOfPlayer}\"\n                    id=\"lead-staff-role-${indexOfPlayer}\"\n                    type=\"radio\"\n                    name=\"player-role-${indexOfPlayer}\"\n                    data-group=\"role-${indexOfPlayer}\"\n                    data-role=\"lead-staff\"\n                  />\n                  <div class=\"toggle-radio-box\"></div>\n                </span>\n              </label>\n            </li>\n            <li>\n              <label class=\"radio-box\">\n                <span>Moderator</span>\n                <span>\n                  <input\n                    class=\"toggle-radio role moderator-role-${indexOfPlayer}\"\n                    id=\"moderator-role-${indexOfPlayer}\"\n                    type=\"radio\"\n                    name=\"player-role-${indexOfPlayer}\"\n                    data-group=\"role-${indexOfPlayer}\"\n                    data-role=\"moderator\"\n                  />\n                  <div class=\"toggle-radio-box\"></div>\n                </span>\n              </label>\n            </li>\n            <li>\n              <label class=\"radio-box\">\n                <span>Trial Moderator</span>\n                <span>\n                  <input\n                    class=\"toggle-radio role trial-moderator-role-${indexOfPlayer}\"\n                    id=\"trial-moderator-role-${indexOfPlayer}\"\n                    type=\"radio\"\n                    name=\"player-role-${indexOfPlayer}\"\n                    data-group=\"role-${indexOfPlayer}\"\n                    data-role=\"trial-moderator\"\n                  />\n                  <div class=\"toggle-radio-box\"></div>\n                </span>\n              </label>\n            </li>\n            <li>\n              <label class=\"radio-box\">\n                <span>Senior Complain Staff</span>\n                <span>\n                  <input\n                    class=\"toggle-radio role senior-complain-staff-role-${indexOfPlayer}\"\n                    id=\"senior-complain-staff-role-${indexOfPlayer}\"\n                    type=\"radio\"\n                    name=\"player-role-${indexOfPlayer}\"\n                    data-group=\"role-${indexOfPlayer}\"\n                    data-role=\"senior-complain-staff\"\n                  />\n                  <div class=\"toggle-radio-box\"></div>\n                </span>\n              </label>\n            </li>\n            <li>\n              <label class=\"radio-box\">\n                <span>Complain Staff</span>\n                <span>\n                  <input\n                    class=\"toggle-radio role complain-staff-role-${indexOfPlayer}\"\n                    id=\"complain-staff-role-${indexOfPlayer}\"\n                    type=\"radio\"\n                    name=\"player-role-${indexOfPlayer}\"\n                    data-group=\"role-${indexOfPlayer}\"\n                    data-role=\"complain-staff\"\n                  />\n                  <div class=\"toggle-radio-box\"></div>\n                </span>\n              </label>\n            </li>\n            <li>\n              <label class=\"radio-box\">\n                <span>Trial Complain Staff</span>\n                <span>\n                  <input\n                    class=\"toggle-radio role trial-complain-staff-role-${indexOfPlayer}\"\n                    id=\"trial-complain-staff-role-${indexOfPlayer}\"\n                    type=\"radio\"\n                    name=\"player-role-${indexOfPlayer}\"\n                    data-group=\"role-${indexOfPlayer}\"\n                    data-role=\"trial-complain-staff\"\n                  />\n                  <div class=\"toggle-radio-box\"></div>\n                </span>\n              </label>\n            </li>\n            <li>\n              <label class=\"radio-box\">\n                <span>Admin</span>\n                <span>\n                  <input\n                    class=\"toggle-radio role trial-complain-staff-role-${indexOfPlayer}\"\n                    id=\"admin-role-${indexOfPlayer}\"\n                    type=\"radio\"\n                    name=\"player-role-${indexOfPlayer}\"\n                    data-group=\"role-${indexOfPlayer}\"\n                    data-role=\"admin\"\n                  />\n                  <div class=\"toggle-radio-box\"></div>\n                </span>\n              </label>\n            </li>\n            <li>\n              <label class=\"radio-box\">\n                <span>VIP</span>\n                <span>\n                  <input\n                    class=\"toggle-radio role vip-role-${indexOfPlayer}\"\n                    id=\"vip-role-${indexOfPlayer}\"\n                    type=\"radio\"\n                    name=\"player-role-${indexOfPlayer}\"\n                    data-group=\"role-${indexOfPlayer}\"\n                    data-role=\"vip\"\n                  />\n                  <div class=\"toggle-radio-box\"></div>\n                </span>\n              </label>\n            </li>\n          </ul>\n        </form>\n      </div>\n    </div>\n    <div class=\"overlay\"></div>\n  </li>\n  `;\n\n  // Select Roles Element\n  let rolesPr = document.querySelector(\"#roles-management .body .container\");\n\n  // create user role row\n  let newPlayer = document.createElement(\"ul\");\n  newPlayer.innerHTML = htmlCode;\n\n  newPlayer\n    .querySelector(\"li.popup > button\")\n    .addEventListener(\"click\", async () => {\n      let popupWin =\n        newPlayer.querySelector(\"li.popup > button\").nextElementSibling;\n      let overlay = popupWin.nextElementSibling;\n      popupWin.style.display = \"flex\";\n      overlay.style.display = \"block\";\n      await delay(0);\n      popupWin.style.opacity = \"1\";\n      overlay.style.opacity = \"1\";\n      popupWin.style.transform = \"translate(-50%, -50%) scale(1)\";\n      popupWin.querySelector(\" .close \").onclick = async () => {\n        popupWin.style.opacity = \"0\";\n        overlay.style.opacity = \"0\";\n        popupWin.style.transform = \"translate(-50%, -50%) scale(0)\";\n        await delay(350);\n        popupWin.style.display = \"none\";\n        overlay.style.display = \"none\";\n      };\n      overlay.onclick = async () => {\n        popupWin.style.opacity = \"0\";\n        overlay.style.opacity = \"0\";\n        popupWin.style.transform = \"translate(-50%, -50%) scale(0)\";\n        await delay(350);\n        popupWin.style.display = \"none\";\n        overlay.style.display = \"none\";\n      };\n    });\n\n  newPlayer.querySelectorAll(\".select-combobox\").forEach((combobox) => {\n    let popupWin = combobox.nextElementSibling;\n    popupWin.querySelectorAll(\"label.radio-box\").forEach((label) =>\n      label.querySelectorAll(\".toggle-radio\").forEach(\n        (ele) =>\n          (ele.oninput = () => {\n            combobox.children[0].textContent = label.children[0].textContent;\n          })\n      )\n    );\n  });\n  // Add This Element\n  rolesPr.append(newPlayer);\n\n  if (role) {\n    newPlayer.querySelector(`#${role}-role-${indexOfPlayer}`).checked = true;\n    newPlayer.querySelector(\".select-combobox\").children[0].textContent =\n      newPlayer.querySelector(\n        `#${role}-role-${indexOfPlayer}`\n      ).parentElement.previousElementSibling.textContent;\n  } else if (role === \"\" || !role) {\n    console.log(indexOfPlayer);\n\n    newPlayer.querySelector(`#vip-role-${indexOfPlayer}`).checked = true;\n    newPlayer.querySelector(\".select-combobox\").children[0].textContent =\n      newPlayer.querySelector(\n        `#vip-role-${indexOfPlayer}`\n      ).parentElement.previousElementSibling.textContent;\n  }\n\n  // Store Data\n\n  // Pb Input\n  let inputId = newPlayer.querySelector(`#player-${indexOfPlayer}-pb-roles`);\n  inputId.oninput = () => {\n    let config = JSON.parse(localStorage.getItem(\"config\"));\n    config[\"players-roles\"][indexOfPlayer][\"id\"] = inputId.value;\n    localStorage.setItem(\"config\", JSON.stringify(config));\n  };\n\n  // Roles Selector\n\n  newPlayer.querySelectorAll(\"input[type=radio]\").forEach((element) => {\n    element.onchange = function () {\n      let config = JSON.parse(localStorage.getItem(\"config\"));\n      config[\"players-roles\"][indexOfPlayer][\"role\"] = element.dataset.role;\n      localStorage.setItem(\"config\", JSON.stringify(config));\n    };\n  });\n}\n\n// Login Screen And Auto Login Logic\nfunction showLoginScreen() {\n  new Promise((res, rej) => {\n    if (JSON.parse(localStorage.getItem(\"config\"))) {\n      res(JSON.parse(localStorage.getItem(\"config\")));\n    } else {\n      rej(\"Error\");\n    }\n  }).then(\n    (config) => {\n      if (\n        localStorage.getItem(\"password\") &&\n        localStorage.getItem(\"password\") ===\n          config[\"server-website\"][\"server-password\"]\n      ) {\n        document.body.classList.remove(\"disable-scrolling\");\n      } else {\n        history.pushState({ screen: \"\" }, \"\", `${window.location.origin}`);\n        document.body.classList.add(\"disable-scrolling\");\n        let loginScreen = document.createElement(\"div\");\n        loginScreen.className = \"login-screen\";\n        loginScreen.id = \"login-screen\";\n        loginScreen.style.opacity = \"1\";\n        loginScreen.innerHTML = ` \n\t\t\t<div class=\"popup-window\">\n\t\t\t\t<div class=\"popup-header\"><h5>Login</h5></div>\n\t\t\t\t<div class=\"body\">\n\t\t\t\t\t<form action>\n\t\t\t\t\t\t<label class=\"password-form d-flex align-items-center flex-column\"\n\t\t\t\t\t\t\t><span class=\"me-auto\">Enter Your Password:</span>\n\t\t\t\t\t\t\t<div class=\"d-flex w-100 mt-1\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclass=\"me-1 d-block w-100\"\n\t\t\t\t\t\t\t\t\tid=\"login-password\"\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"login-password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tautocomplete=\"new-password\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<button class=\"show-or-hide circle\">\n\t\t\t\t\t\t\t\t<i class=\"fa-solid fa-eye\"></i>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"wrong-password-text\"> Wrong Password</div>\n\t\t\t\t\t\t\t\t<button class=\"login w-100\">Login</button></label\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"overlay\"></div>\n\t\t\t`;\n        document.body.children[0].before(loginScreen);\n        let showAndHidePassword = loginScreen.querySelector(\".show-or-hide\");\n        showAndHidePassword.onclick = (ev) => {\n          ev.preventDefault();\n          if (showAndHidePassword.previousElementSibling.type === \"password\") {\n            showAndHidePassword.previousElementSibling.type = \"text\";\n            showAndHidePassword.innerHTML = `<i class=\"fa-solid fa-eye-slash\"> </i>`;\n          } else if (\n            showAndHidePassword.previousElementSibling.type === \"text\"\n          ) {\n            showAndHidePassword.previousElementSibling.type = \"password\";\n            showAndHidePassword.innerHTML = `<i class=\"fa-solid fa-eye\"></i>`;\n          }\n        };\n\n        loginScreen\n          .querySelector(\"button.login\")\n          .addEventListener(\"click\", async (ev) => {\n            ev.preventDefault();\n            let password = loginScreen.querySelector(\"#login-password\");\n            if (\n              password.value === config[\"server-website\"][\"server-password\"]\n            ) {\n              document.body.classList.remove(\"disable-scrolling\");\n              loginScreen.style.opacity = \"0\";\n              await delay(350);\n              loginScreen.remove();\n              localStorage.setItem(\n                \"password\",\n                config[\"server-website\"][\"server-password\"]\n              );\n            } else {\n              if (password.value == \"\") {\n                loginScreen.querySelector(\".wrong-password-text\").textContent =\n                  \"Empty Input Field\";\n              } else {\n                loginScreen.querySelector(\".wrong-password-text\").textContent =\n                  \"Wrong Password \";\n              }\n              loginScreen.querySelector(\".wrong-password-text\").style.opacity =\n                \"1\";\n            }\n          });\n      }\n    },\n    (rej) => console.error(rej)\n  );\n}\n\n// Export The Functions\nexport {\n  loadSettings,\n  initializeFromURL,\n  delay,\n  navigateToScreen,\n  updateURL,\n  theme,\n  sendMessage,\n  storeElesValues,\n  showLoginScreen,\n  createNewRoleBlock,\n  loadRoles,\n};\n"]}