{"version":3,"file":"../functions.js","names":["vars","delay","ms","Promise","res","setTimeout","sendMessage","msg","msgsBox","document","querySelector","newMsg","createElement","textContent","appendChild","scrollIntoView","behavior","theme","themeName","body","classList","add","remove","console","error","updateURL","screenClass","screenName","replace","stateObj","screen","history","pushState","window","location","pathname","async","navigateToScreen","tScreen","style","display","left","initializeFromURL","hash","screenClassNameToNav","match","join","log","loadSettings","config","JSON","parse","localStorage","getItem","elesToSaveData","forEach","ele","element","id","value","settingIds","reduce","obj","key","type","checked","Boolean","storeElesValues","elements","el","eventType","oninput","ev","target","current","i","length","setItem","stringify","addEventListener","parseInt"],"sources":["functions.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import * as vars from \"./vars.js\";\n\n// Wait function\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n// Send Msg Function\nfunction sendMessage(msg) {\n\tlet msgsBox = document.querySelector(\".chat-screen .messages\");\n\tlet newMsg = document.createElement(\"p\");\n\tnewMsg.textContent = `ServerName : ${msg}`;\n\tmsgsBox.appendChild(newMsg);\n\tnewMsg.scrollIntoView({ behavior: \"smooth\" });\n}\n// Change Theme Function\nfunction theme(themeName = \"dark\") {\n\tif (themeName === \"dark\") {\n\t\tdocument.body.classList.add(\"dark-mode\");\n\t} else if (themeName === \"light\") {\n\t\tdocument.body.classList.remove(\"dark-mode\");\n\t} else {\n\t\tconsole.error(`No Theme Called ${themeName}`);\n\t}\n}\n\n// Update URL without page reload\nfunction updateURL(screenClass) {\n\t// Get the screen name from class (remove '-screen' suffix)\n\tconst screenName = screenClass.replace(\"-screen\", \"\");\n\n\t// Create a state object\n\tconst stateObj = { screen: screenName };\n\n\t// Change the URL without reloading the page\n\thistory.pushState(stateObj, \"\", `${window.location.pathname}#${screenName}`);\n}\n\n// Function to handle navigation to a specific screen\nasync function navigateToScreen(screenClass) {\n\tconst tScreen = document.querySelector(\".\" + screenClass);\n\n\t// Exit if the screen doesn't exist\n\tif (!tScreen) return;\n\n\t// Show the screen\n\ttScreen.style.display = \"block\";\n\tawait delay(10);\n\ttScreen.style.left = 0;\n\tdocument.body.classList.add(\"disable-scrolling\");\n\t// Update URL\n\tupdateURL(screenClass);\n}\n\n// Initialize navigation on page load\nfunction initializeFromURL() {\n\tif (window.location.hash !== \"\") {\n\t\ttry {\n\t\t\tlet screenClassNameToNav = `${window.location.hash\n\t\t\t\t.match(/[^#]/gim)\n\t\t\t\t.join(\"\")}-screen`;\n\t\t\thistory.pushState({ screen: \"\" }, \"\", `${window.location.pathname}`);\n\n\t\t\tnavigateToScreen(screenClassNameToNav);\n\t\t} catch (error) {\n\t\t\tconsole.log(\"Error \" + error);\n\t\t}\n\t}\n}\n\nfunction loadSettings() {\n\tconst config = JSON.parse(localStorage.getItem(\"config\")) || {};\n\tconst elements = vars.elesToSaveData;\n\n\telements.forEach((ele) => {\n\t\tconst element = document.querySelector(ele.id);\n\t\tif (!element) return;\n\n\t\tconst value = ele.settingIds.reduce((obj, key) => obj?.[key], config);\n\t\tswitch (ele.type) {\n\t\t\tcase \"input\":\n\t\t\t\telement.value = value || \"\";\n\t\t\t\tbreak;\n\t\t\tcase \"switch\":\n\t\t\t\telement.checked = Boolean(value);\n\t\t\t\tbreak;\n\t\t\tcase \"number-chooser\":\n\t\t\t\telement.textContent = value || \"\";\n\t\t\t\tbreak;\n\t\t\tcase \"color-selector\":\n\t\t\t\telement.value = value || \"\";\n\t\t\t\tbreak;\n\t\t\tcase \"time\":\n\t\t\t\telement.value = value || \"\";\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t}\n\t});\n}\n\nfunction storeElesValues() {\n\tconst elements = vars.elesToSaveData;\n\tconst config = JSON.parse(localStorage.getItem(\"config\")) || {};\n\n\telements.forEach((ele) => {\n\t\tconst el = document.querySelector(ele.id);\n\t\tif (!el) return;\n\n\t\tconst eventType =\n\t\t\tele.type === \"input\"\n\t\t\t\t? \"input\"\n\t\t\t\t: \"checkbox\"\n\t\t\t\t? \"click\"\n\t\t\t\t: \"color-selector\"\n\t\t\t\t? \"input\"\n\t\t\t\t: \"time\"\n\t\t\t\t? \"input\"\n\t\t\t\t: \"\";\n\t\tif (ele.type === \"color-selector\" || ele.type === \"time\") {\n\t\t\tel.oninput = (ev) => {\n\t\t\t\tlet value = ev.target.value;\n\t\t\t\tlet current = config;\n\t\t\t\tfor (let i = 0; i < ele.settingIds.length - 1; i++) {\n\t\t\t\t\tconst key = ele.settingIds[i];\n\t\t\t\t\tcurrent[key] = current[key] || {};\n\t\t\t\t\tcurrent = current[key];\n\t\t\t\t}\n\t\t\t\tcurrent[ele.settingIds[ele.settingIds.length - 1]] = value;\n\n\t\t\t\tlocalStorage.setItem(\"config\", JSON.stringify(config));\n\t\t\t};\n\t\t} else {\n\t\t\tel.addEventListener(eventType, (ev) => {\n\t\t\t\tlet value;\n\t\t\t\tif (ele.type === \"input\") value = ev.target.value;\n\t\t\t\tif (ele.type === \"switch\") value = ev.target.checked;\n\t\t\t\tif (ele.type === \"number-chooser\")\n\t\t\t\t\tvalue = parseInt(ev.target.textContent);\n\t\t\t\tif (ele.type === \"color-selector\") value = ev.target.value;\n\n\t\t\t\t// Update config using nested property assignment\n\t\t\t\tlet current = config;\n\t\t\t\tfor (let i = 0; i < ele.settingIds.length - 1; i++) {\n\t\t\t\t\tconst key = ele.settingIds[i];\n\t\t\t\t\tcurrent[key] = current[key] || {};\n\t\t\t\t\tcurrent = current[key];\n\t\t\t\t\tconsole.log(key);\n\t\t\t\t\tconsole.log(current);\n\t\t\t\t}\n\t\t\t\tcurrent[ele.settingIds[ele.settingIds.length - 1]] = value;\n\n\t\t\t\tlocalStorage.setItem(\"config\", JSON.stringify(config));\n\t\t\t});\n\t\t}\n\t});\n}\nexport {\n\tloadSettings,\n\tinitializeFromURL,\n\tdelay,\n\tnavigateToScreen,\n\tupdateURL,\n\ttheme,\n\tsendMessage,\n\tstoreElesValues,\n};\n"]}